basePath: /
definitions:
  models.CreatePersonRequest:
    properties:
      name:
        example: Dmitriy
        type: string
      patronymic:
        example: Vasilevich
        type: string
      surname:
        example: Ushakov
        type: string
    type: object
  models.Person:
    properties:
      age:
        example: 30
        type: integer
      created_at:
        type: string
      gender:
        example: male
        type: string
      id:
        example: 1e8c72e6-3c77-4b9b-b44d-1b0e44c3c0b9
        type: string
      name:
        example: Dmitriy
        type: string
      nationality:
        example: RU
        type: string
      patronymic:
        example: Vasilevich
        type: string
      surname:
        example: Ushakov
        type: string
      updated_at:
        type: string
    type: object
  models.UpdatePersonRequest:
    properties:
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
  description: Сервис для обогащения ФИО возрастом, полом и национальностью
  title: People Enrichment API
  version: "1.0"
paths:
  /persons:
    get:
      description: Получить список людей с фильтрами и пагинацией
      parameters:
      - description: Лимит
        in: query
        name: limit
        type: integer
      - description: Смещение
        in: query
        name: offset
        type: integer
      - description: Имя
        in: query
        name: name
        type: string
      - description: Фамилия
        in: query
        name: surname
        type: string
      - description: Возраст
        in: query
        name: age
        type: integer
      - description: Возраст больше
        in: query
        name: age_gt
        type: integer
      - description: Возраст меньше
        in: query
        name: age_lt
        type: integer
      - description: Пол
        in: query
        name: gender
        type: string
      - description: Национальность
        in: query
        name: nationality
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Person'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Получить список людей
      tags:
      - persons
    post:
      consumes:
      - application/json
      description: Обогащает ФИО через внешние API и сохраняет в БД
      parameters:
      - description: Данные человека
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreatePersonRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Person'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Создание нового человека
      tags:
      - persons
  /persons/{id}:
    delete:
      parameters:
      - description: UUID человека
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Удалить человека по ID
      tags:
      - persons
    put:
      consumes:
      - application/json
      parameters:
      - description: UUID человека
        in: path
        name: id
        required: true
        type: string
      - description: Новые данные
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreatePersonRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.UpdatePersonRequest'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Обновить данные человека по ID
      tags:
      - persons
swagger: "2.0"
